<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="net.pingfang.dao.workRecord.CranePreparationDao">

	<!-- 获取所有岸桥配制 -->
   <select id="getAllCranePreparationList" resultType="net.pingfang.entity.work.CranePreparationVo">
	  	SELECT 
	     	id 						AS 'id',
	     	vessel_name_cn  		AS 'vesselNameCn', 
		  	vessel_name_en 			AS 'vesselNameEn',	
		  	vessel_code				AS 'vesselCode',
		  	vessel_voyage_number	AS 'vesselNumber',
			crane_num 				AS 'craneNum',	
			type,
			bay 					AS 'bay',
			is_auto					AS 'isAuto',
			work_mode				AS 'workMode',
			alongside,
			in_voyage				AS 'inVoyage',
			out_voyage				AS 'outVoyage',
			work_type				AS 'workType',
			DATE_FORMAT(create_time, '%Y-%m-%d %h:%i') AS 'createTime'
	    FROM Crane_Preparation
	    WHERE TYPE = '1'
	  	ORDER BY crane_num ASC
   </select>
   <!-- 批量插入岸桥配制 -->
   <insert id="insertCranePreparation" parameterType="java.util.ArrayList">
   		INSERT INTO Crane_Preparation 
		(
		  vessel_name_cn,      
		  vessel_name_en, 
		  vessel_code,
		  vessel_voyage_number,
		  crane_num,
		  type,
		  bay,
		  is_auto,
		  work_mode,
		  alongside,
		  camera_id,
		  in_voyage,
		  out_voyage,
		  work_type,
		  stevedore_id,
		  ship_position
		)
		VALUES  
		<foreach collection="list" item="emp" separator=",">
	      (
	       #{emp.vesselNameCn},
	       #{emp.vesselNameEn},
	       #{emp.vesselCode},
	       #{emp.vesselNumber},
	       #{emp.craneNum},
	       #{emp.type},
	       #{emp.bay},
	       #{emp.isAuto},
	       #{emp.workMode},
	       #{emp.alongside},
	       #{emp.cameraId},
	       #{emp.inVoyage},
	       #{emp.outVoyage},
	       #{emp.workType},
	       #{emp.stevedoreId},
	       #{emp.shipPosition}       
	       )
      </foreach> 	
   </insert>
   
   <!-- 删除一条岸桥配制记录 -->
	<delete id="deleteCranePreparation" parameterType="int">
		DELETE FROM Crane_Preparation WHERE id = #{id}	
	</delete>
	<!-- 删除一条岸桥配制记录 -->
	<delete id="deleteCranePreparationByCraneNum" parameterType="net.pingfang.entity.work.CranePreparationVo">
		DELETE FROM Crane_Preparation WHERE crane_num = #{craneNum} AND type = #{type} 
	</delete>
	
	<!-- 根据岸桥编号获取一条岸桥配制信息 -->
   <select id="getCranePreparation" resultType="net.pingfang.entity.work.CranePreparationVo">
	  	SELECT 
	  		id,
	  		vessel_name_en 			AS 'vesselNameEn',	
		  	vessel_name_cn  		AS 'vesselNameCn', 	
		  	crane_num 				AS 'craneNum',	
		  	type,
		  	vessel_code				AS 'vesselCode',
		  	vessel_voyage_number	AS 'vesselNumber',
			bay 					AS 'bay',
			is_auto					AS 'isAuto',
			work_mode				AS 'workMode',
			alongside,
			camera_id				AS 'cameraId',
			in_voyage				AS 'inVoyage',
			out_voyage				AS 'outVoyage',
			work_type				AS 'workType',
			check_way				AS 'checkWay'
	    FROM Crane_Preparation
	    WHERE crane_num = #{craneNum}
   </select>
   <!-- 2020-03-06 更新 -->
    <!-- 获取所有岸桥信息 下拉列表框 -->
   <select id="getCraneInfoList" resultType="net.pingfang.entity.work.CranePreparationVo">
   		SELECT 
   			cp.id,
	  		cp.vessel_name_en 			AS 'vesselNameEn',	
		  	cp.vessel_name_cn  			AS 'vesselNameCn', 	
		  	cp.crane_num 				AS 'craneNum',	
		  	cp.vessel_code				AS 'vesselCode',
		  	cp.vessel_voyage_number		AS 'vesselNumber',
		  	cp.bay 						AS 'bay',		  	
		  	cp.is_auto					AS 'isAuto',
		  	cp.work_mode				AS 'workMode',
		  	cp.alongside,
		  	cp.in_voyage				AS 'inVoyage',
		  	cp.out_voyage				AS 'outVoyage',
		  	cp.work_type				AS 'workType',
		  	stevedore_id				AS 'stevedoreId',
		  	ship_position				AS 'shipPosition'
	    FROM Crane_Preparation cp
	    WHERE type = '1'
	    ORDER BY cp.crane_num 
   </select>
   <!-- 获取所有没被引用的岸桥信息  下拉列表框-->
   <select id="getNotUsedCraneInfoList" resultType="net.pingfang.entity.vessel.CraneInfoVo">
   		SELECT 
   			c1.id,
   			c1.craneNameCn,
   			c1.craneNameEn,
   			c1.craneNum
   		FROM crane_infor c1
   		ORDER BY c1.craneNum ASC
   		<!-- 2019-11-06 更新 
   		WHERE NOT EXISTS(SELECT 1 FROM crane_preparation c2 WHERE c2.crane_num = c1.craneNum)
   		-->
   </select>
   <!-- 查询岸桥配制是否已经存在 -->
   <select id="getCountCranePreparationByCraneNum" resultType="int" parameterType="String">
	  	SELECT COUNT(id) FROM Crane_Preparation
	  	WHERE crane_num = #{craneNum}
   </select>
   
    <!-- 根据船舶代码"vessel_code"获取船舷方向 -->
   <select id="getAlongsideByVesselCood" parameterType="String" resultType="String">   		
   		SELECT alongside FROM Crane_Preparation WHERE id =(
			SELECT MAX(id) FROM Crane_Preparation WHERE vessel_code = #{vesselCood}
		)
		AND type = '1'
   </select>
   <!-- 根据岸桥编号批量获取岸桥配制信息 -->
    <select id="getListCranePreparation" resultType="net.pingfang.entity.work.CranePreparationVo">
	  	SELECT 
	  		id,
		  	crane_num 				AS 'craneNum',	
		  	vessel_code				AS 'vesselCode',
		  	vessel_voyage_number	AS 'vesselNumber',
			bay 					AS 'bay',
			bay_width				AS 'bayWidth'
	    FROM Crane_Preparation
	    WHERE crane_num IN
	    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
           #{item}
      	</foreach>
      	AND type = #{type}
   </select>
   <!-- 更新BayWidth -->
    <update id="updateBayWidth" parameterType="net.pingfang.entity.work.CranePreparationVo">
   		UPDATE Crane_Preparation
        SET
        bay_width = #{bayWidth}
        WHERE crane_num = #{craneNum}
    </update>
      
</mapper>